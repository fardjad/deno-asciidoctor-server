name: compile-and-upload

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "The release tag"
        required: true

jobs:
  compile-and-upload:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    runs-on: ubuntu-latest
    name: Compile and upload
    steps:
      - name: Check out
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.inputs.ref }}
      - uses: denoland/setup-deno@main
        with:
          deno-version: v1.x
      - name: Cache Deno dependencies
        uses: actions/cache@main
        env:
          cache-name: cache-deno-dependencies
        with:
          path: ~/.cache/deno
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
      - name: Compile and upload binaries
        run: |
          deno compile --target ${{ matrix.target }} --allow-read --allow-net -o "$FILE_NAME" app.ts
          gh release upload "${{ github.event.inputs.ref }}" "$FILE_NAME" --clobber
        env:
          FILE_NAME: "deno-asciidoctor-server-${{ matrix.target }}${{ (matrix.target == 'x86_64-pc-windows-msvc' && '.exe') || '' }}"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
